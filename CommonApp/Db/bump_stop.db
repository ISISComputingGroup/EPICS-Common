record(mbbi, "$(P)BUMP_STOP")
{
    field(DESC, "Is Bump Stop tripped?")
    field(ZRST, "TRIPPED")
    field(ONST, "NOT_TRIPPED")
    field(TWST, "UNAVAILABLE")
    field(ZRVL, 0)
    field(ONVL, 1)
    field(TWVL, 2)
    
	field(VAL, 2)
    field(PINI, 1)
	field(ZRSV, "MAJOR")
	field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:BUMP_STOP")
	field(FLNK, "$(P)MESSAGE_FORWARD_CALC")
}

record(calcout, "$(P)BUMP_STOP_READ")
{
    field(DESC, "Get Status of Bump Stop")
	field(INPA, "$(P)$(BMPSTP) CP")
	field(CALC, "A = 0 ? 1 : 0")
    field(OUT, "$(P)BUMP_STOP PP MS")
    field(IVOA, "Set output to IVOV")
    field(IVOV, "2")
}

record(calc, "$(P)MESSAGE_FORWARD_CALC")
{
	field(INPA, "$(P)BUMP_STOP")
	field(CALC, "A+1")
	field(FLNK, "$(P)MESSAGE_SELECT")
}

record(fanout, "$(P)MESSAGE_SELECT")
{
	field(LNK1, "$(P)BUMP_TRIPPED_MESSAGE")
	field(SELM, "Specified")
	field(SELL, "$(P)MESSAGE_FORWARD_CALC")
}

record(stringout, "$(P)BUMP_TRIPPED_MESSAGE")
{
	field(DTYP, "stdio")
	field(OUT, "@errlog")
	field(VAL, "BUMP STOP TRIPPED")
}

### SIMULATION RECORDS ###

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(mbbi, "$(P)SIM:BUMP_STOP")
{
	field(SCAN, "Passive")
    field(ZRST, "TRIPPED")
    field(ONST, "NOT_TRIPPED")
    field(TWST, "UNAVAILABLE")
    field(ZRVL, 0)
    field(ONVL, 1)
    field(TWVL, 2)
	field(VAL, 2)
	field(DTYP, "Soft Channel")
	field(FLNK, "$(P)BUMP_STOP")
}
